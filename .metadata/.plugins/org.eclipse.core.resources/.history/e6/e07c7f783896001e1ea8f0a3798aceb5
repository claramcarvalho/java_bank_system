package data;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.ArrayList;

import bus.*;

public class CurrencyAccountDB {
	static private Connection myConnection;
	static private String mySQLStatement = null;	
	static private String mySQLQuery = null;
	
	public static void insert(CurrencyAccount aNewCurrencyAccount) throws SQLException 
	{	 	
    	Integer id = AccountDB.insertAccount(aNewCurrencyAccount);
    	   
	    if (id != null) {
	        
	        PreparedStatement myPreparedStatement = null ;
			String sqlStatement;
			
			sqlStatement = "insert into CurrencyAccount values( ? , ? , ? , ? , ? , ? , ?)  ";
					
			myPreparedStatement = myConnection.prepareStatement(sqlStatement);		
			
			myPreparedStatement.setInt(1, id);
			myPreparedStatement.setString(2, aNewCurrencyAccount.getType().toString());
			myPreparedStatement.setInt(3, aNewCurrencyAccount.getCustomer());	
			myPreparedStatement.setDouble(4, aNewCurrencyAccount.getBalance());
			myPreparedStatement.setDate(5, Date.valueOf(aNewCurrencyAccount.getOpeningDate()));
			myPreparedStatement.setString(6, aNewCurrencyAccount.getCurrency().toString());
			myPreparedStatement.setDouble(7, aNewCurrencyAccount.getCurrencyRate());
			myPreparedStatement.setDouble(8, aNewCurrencyAccount.getConversionFees());
			
			myPreparedStatement.executeUpdate();	
			
			myConnection.commit();	
	    }
	}
}
