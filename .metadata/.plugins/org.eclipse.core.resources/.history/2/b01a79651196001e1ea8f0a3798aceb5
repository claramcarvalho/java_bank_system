package data;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.sql.PreparedStatement;
import bus.Account;

public class UserDB {
	static private Connection myConnection;
	static private String mySQLStatement = null;	
	static private String mySQLQuery = null;
	static private Statement myStatemnt = null;
	static private ResultSet myResultSet = null;
	static private Account anewAccount = null;
	
	public static void insert1(Employee aNewEmployee) throws SQLException {
		
		myConnection = DBConnection.getConnection();
		
		mySQLStatement = "Insert into Employee(Emp_Id, Emp_First_Name, Emp_Last_Name, Dept_Id)  values( " 
                                                    + aNewEmployee.getId() 
                                                    + ", \'" 
                                                    + aNewEmployee.getFirstName()  
                                                    + ", \'" 
                                                    + aNewEmployee.getLastName() 
                                                    + ", \'" 
                                                    + aNewEmployee.getDeptId() 
                                                    +  "\')" ;
		
			myStatemnt = myConnection.createStatement();
			
		    myStatemnt.executeUpdate(mySQLStatement);
		    
			     myConnection.commit();				
		
	}
	
	 //-2- inserting data 
    public static void insert2(Employee aNewEmployee) throws SQLException 
	{	 	
		PreparedStatement 	myPreparedStatement = null ;
		
		Employee record = new Employee();
		record = aNewEmployee;
		
		String sqlStatement;
		
		sqlStatement = "insert into Employee values( ?  , ? , ?  , ? )  ";
				
		myPreparedStatement = myConnection.prepareStatement(sqlStatement);		
		
		myPreparedStatement.setInt(1,  aNewEmployee.getId() );
		
		myPreparedStatement.setString(2, aNewEmployee.getFirstName());	
		
		myPreparedStatement.setString(3, aNewEmployee.getLastName());	
		
		myPreparedStatement.setInt(4, aNewEmployee.getDeptId());
		
		myPreparedStatement.executeUpdate();	
		
		 myConnection.commit();		 
									
	}
	
	public static void update(Employee newEmployee) throws SQLException {
		
		myConnection = DBConnection.getConnection();
		
		mySQLStatement = "update Employee set Emp_First_Name =  \'"    
				
			              +   newEmployee.getFirstName()     +    "\' WHERE  Emp_Id = "
			                  
			              +  newEmployee.getId() ;
	
		myStatemnt = myConnection.createStatement();
			
		    myStatemnt.executeUpdate(mySQLStatement);
			
		 myConnection.commit();		
									
	}
	
	/**
	 * 
	 * @param id primary key of a department
	 * @throws SQLException
	 */
	public static void delete(int id ) throws SQLException {
		
		myConnection = DBConnection.getConnection();
		
		mySQLStatement = "Delete FROM Employee WHERE Emp_Id = "  + id  ;
	
			
			myStatemnt = myConnection.createStatement();
			
		   myStatemnt.executeUpdate(mySQLStatement);
			
			myConnection.commit();	

	}
	
	public static Employee search(int id) throws SQLException, SQLException{
		
		myConnection = DBConnection.getConnection();
		
		mySQLQuery = "SELECT * FROM Employee WHERE  Emp_Id = " + id ;
		
		myStatemnt = myConnection.createStatement();
		
		myResultSet = myStatemnt.executeQuery(mySQLQuery);
		
		if(myResultSet.next()) {
			aEmployee = new Employee(Integer.parseInt(myResultSet.getString(1)), myResultSet.getString(2), myResultSet.getString(3), Integer.parseInt(myResultSet.getString(4)));
		}	
		
		return aEmployee;
	}
	
	public static ArrayList<Employee> select() throws SQLException, NumberFormatException, SQLException{
		
		myConnection = DBConnection.getConnection();
		
		mySQLQuery = "SELECT * FROM Employee";
		
		myStatemnt = myConnection.createStatement();
		
		myResultSet = myStatemnt.executeQuery(mySQLQuery);
		
		ArrayList<Employee> myList = new ArrayList<Employee>();
		
		while(myResultSet.next()) {
			
			aEmployee = new Employee(Integer.parseInt(myResultSet.getString(1)), myResultSet.getString(2), myResultSet.getString(3), Integer.parseInt(myResultSet.getString(4)));
			
			myList.add(aEmployee);
		}
		
		return myList;
	}
}
